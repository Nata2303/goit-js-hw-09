{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,MAAMQ,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAEN,MAAMC,EAAkBN,EAAKO,SAAgB,MACvCC,EAAYR,EAAKO,SAAe,KAChCE,EAAcT,EAAKO,SAAiB,OAEpCG,EAAaC,SAASL,EAAgBM,OACtCC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,OAEpC,GAAIG,MAAML,IAAeK,MAAMF,IAASE,MAAMD,GAC5CE,EAAA5B,GAAS6B,OAAOC,QAAQ,mCAI1B,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAQK,IAC3B7B,EAAc6B,EAAGT,GAAcS,EAAI,GAAKN,GACrCO,MAAK,EAAC7B,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOI,QACd,uBAAqB9B,QAAiBC,MAAU,IAGnD8B,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOC,QACd,sBAAoB3B,QAAeC,MAAU,GAE/C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const firstDelayInput = form.elements['delay'];\n  const stepInput = form.elements['step'];\n  const amountInput = form.elements['amount'];\n\n  const firstDelay = parseInt(firstDelayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  if (isNaN(firstDelay) || isNaN(step) || isNaN(amount)) {\n    Notiflix.Notify.failure('Please enter valid numbers');\n    return;\n  }\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, firstDelay + (i - 1) * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","preventDefault","firstDelayInput","elements","stepInput","amountInput","firstDelay","parseInt","value","step","amount","isNaN","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.646b806b.js.map"}